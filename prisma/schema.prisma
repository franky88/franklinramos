generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id          String       @id @default(uuid()) @map("_id")
    clerkUserId String       @unique
    email       String       @unique
    name        String?
    imageUrl    String?
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    porfolio    Portfolio[]
    experience  Experience[]
    skill       Skill[]
}

model Category {
    id        String      @id @default(uuid()) @map("_id")
    name      String
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    Portfolio Portfolio[]
}

model Portfolio {
    id          String    @id @default(uuid()) @map("_id")
    title       String
    description String
    url         String?
    imageUrl    String?
    Category    Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    categoryId  String?
    User        User?     @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
    userId      String?
    createdAt   DateTime  @default(now())

    @@index([categoryId])
    @@index([userId])
}

model Experience {
    id          String    @id @default(uuid()) @map("_id")
    position    String
    company     String
    description String
    isWithLine  Boolean
    startDate   DateTime
    endDate     DateTime?
    User        User?     @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
    userId      String?
    createdAt   DateTime  @default(now())

    @@index([userId])
}

model Skill {
    id          String   @id @default(uuid()) @map("_id")
    name        String
    application String
    from        DateTime
    to          DateTime
    mastery     Float
    User        User?    @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
    userId      String?
    createdAt   DateTime @default(now())

    @@index([userId])
}
